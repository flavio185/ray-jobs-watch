apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fastapi-duckdb-chart.fullname" . }}
  labels:
    {{- include "fastapi-duckdb-chart.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "fastapi-duckdb-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fastapi-duckdb-chart.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "fastapi-duckdb-chart.fullname" . }}-config
          volumeMounts:
            - name: data
              mountPath: /app/database
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
        # ---- Poller Sidecar Container ----
        {{- if .Values.poller.enabled }}
        - name: poller
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
          - |
            sleep 5
            python /app/pooler.py
          envFrom:
            - configMapRef:
                name: {{ include "fastapi-duckdb-chart.fullname" . }}-config
          env:
            # Use the Downward API to inject the Pod's namespace into the container
            # This value is dynamic and cannot be in the ConfigMap
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            # Mount the same volume as the main app
            - name: data
              mountPath: /app/database
        {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "fastapi-duckdb-chart.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
